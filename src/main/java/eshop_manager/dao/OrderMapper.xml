<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="eshop_manager.dao.OrderMapper">

	<!-- 开启本mapper下的二级缓存 -->
	<cache/>
	
	<sql id="selectOrderWhere">
		<where>
			<if test="order_id!=null and order_id!=''">
				<bind name="neworder_id" value="'%'+order_id+'%'"/>
				AND order_id like #{neworder_id}
			</if>
			<if test="person!=null and person!=''">
				<bind name="newperson" value="'%'+person+'%'"/>
				AND person like #{newperson}
			</if>
			<if test="order_date!=null and order_date!=''">
				AND order_date=#{order_date}
			</if>
			<if test="order_status==-1">
				AND status_pay=0
			</if>
			<if test="order_status==0">
				AND status=-1
			</if>
			<if test="order_status==1">
				AND status_send=0
			</if>
			<if test="order_status==2">
				AND status_receive=0
			</if>
			<if test="order_status==3">
				AND status_pay=1 AND status=1 AND status_receive=1 AND status_receive=1
			</if>			
		</where>
	</sql>
	
	<resultMap type="eshop_manager.entity.OrderInfo" id="orderResultMap">
		<id column="order_id" property="order_id"/>
		<result column="user_id" property="user_id"/>
		<result column="address" property="address"/>
		<result column="person" property="person"/>
		<result column="phone" property="phone"/>
		<result column="order_price" property="order_price"/>
		<result column="order_date" property="order_date"/>
		<result column="status_pay" property="status_pay"/>
		<result column="status_send" property="status_send"/>
		<result column="status_receive" property="status_receive"/>
		<result column="status" property="status"/>
		<result column="pay_time" property="pay_time"/>
		<association property="userInfo" javaType="eshop_manager.entity.UserInfo">
			<id column="user_id" property="user_id"/>
			<result column="user_name" property="user_name"/>
		</association>
		<collection property="orderDetailInfoList" ofType="eshop_manager.entity.OrderDetailInfo">
			<result column="order_id" property="order_id"/>
			<result column="num" property="num"/>
			<result column="book_id" property="book_id"/>
			<association property="bookInfo" javaType="eshop_manager.entity.BookInfo">
				<id column="book_id" property="book_id"/>
				<result column="book_name" property="book_name"/>
				<result column="book_price" property="book_price"/>
				<result column="store_count" property="store_count"/>
			</association>
		</collection>
	</resultMap>
	
	<select id="selectOrderList" parameterType="map" resultType="int">
		select count(*) from tb_order
		<if test="status==1">
		 where status_pay=#{status_pay}
		 and status_send=#{status_send} and status_receive=#{status_receive} and status=1
		</if>
		<if test="status==0">
		 where status=0
		</if>
	</select>
	<select id="selectOrderPrice" resultType="double">
		select sum(order_price) from tb_order
		where status_pay=1 and status_send=1 and status_receive=1 and status=1
		and DATE_FORMAT(order_date,'%Y%m')=DATE_FORMAT(NOW(),'%Y%m')
	</select>
	
	<select id="queryOrderList" parameterType="map" resultMap="orderResultMap">
		SELECT t1.*, t2.user_name FROM tb_order t1 INNER JOIN tb_user t2 ON t1.user_id=t2.user_id
		<include refid="selectOrderWhere" />
		LIMIT #{start}, #{pageSize}
	</select>
	
	<select id="totalOrderCount" resultType="int">
		SELECT 	COUNT(order_id) FROM tb_order
	</select>
	
	<select id="selectOrderInfo" parameterType="string" resultMap="orderResultMap">
		SELECT t1.*, user_name, t3.book_id, t3.num, t4.book_name,t4.book_price,t4.store_count 
		FROM tb_order t1 INNER JOIN tb_user t2 ON t1.user_id=t2.user_id 
		INNER JOIN tb_order_detail t3 ON t1.order_id=t3.order_id 
		INNER JOIN tb_book t4 ON t3.book_id=t4.book_id	
		WHERE t1.order_id=#{order_id}
	</select>
	
	<delete id="deleteSingleOrder" parameterType="string" flushCache="true">
		DELETE FROM tb_order WHERE order_id=#{order_id}
	</delete>
	
	<delete id="deleteManyOrder" parameterType="java.util.List" flushCache="true">
		DELETE FROM tb_order WHERE order_id IN
		 <foreach collection="list" item="order_id" open="(" close=")" separator="," >
		 	#{order_id}
		 </foreach>
	</delete>
		
	<update id="cancelManyOrder" parameterType="java.util.List" flushCache="true">
		UPDATE tb_order SET status=-1 WHERE order_id IN
		 <foreach collection="list" item="order_id" open="(" close=")" separator="," >
		 	#{order_id}
		 </foreach>
	
	</update>	
	
</mapper>
